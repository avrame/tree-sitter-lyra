======================
For in loop with range
======================

for i in 1..=3 {
  println("i == #{i}")
}

---

(program
  (for_in_loop
    (for_in_condition
      (for_variable)
      (range_expr
        (range_start
          (integer))
        (range_end_operator)
        (range_end
          (integer))))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))

======================
For in loop with array
======================

for i in [1,2,3] {
  println("i == #{i}")
}

---

(program
  (for_in_loop
    (for_in_condition
      (for_variable)
      (array_literal
        (integer)
        (integer)
        (integer)))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))

======================
For in loop with tuple
======================

for i in (1, "2", 3) {
  println("i == #{i}")
}

---

(program
  (for_in_loop
    (for_in_condition
      (for_variable)
      (tuple_literal
        (tuple_value
          (integer))
        (tuple_value
          (string_literal))
        (tuple_value
          (integer))))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))

=======================
For in loop with struct
=======================

for key, val in { one: 1, two: "2", three: 3 } {
  println("key: #{key}, val: #{val}")
}

---

(program
  (for_in_loop
    (for_in_condition
      (for_variable)
      (for_index)
      (struct_literal
        (field_name)
        (field_value
          (integer))
        (field_name)
        (field_value
          (string_literal))
        (field_name)
        (field_value
          (integer))))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))

===========================
For in loop with identifier
===========================

let nums = [1, 2, 3]
for i in nums {
  println("i == #{i}")
}

---

(program
  (declaration
    (identifier)
    (array_literal
      (integer)
      (integer)
      (integer)))
  (for_in_loop
    (for_in_condition
      (for_variable)
      (identifier))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))

===================================
For in loop with postfix expression
===================================

let foo = { bar: [1, 2, 3] }
for i in foo.bar {
  println("i == #{i}")
}

---

(program
  (declaration
    (identifier)
    (struct_literal
      (field_name)
      (field_value
        (array_literal
          (integer)
          (integer)
          (integer)))))
  (for_in_loop
    (for_in_condition
      (for_variable)
      (postfix_expression
        (identifier)
        (identifier)))
    (for_in_body
      (postfix_expression
        (identifier)
        (function_call
          (value
            (string_literal)))))))